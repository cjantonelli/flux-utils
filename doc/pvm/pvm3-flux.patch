diff -up pvm3/conf/LINUX64.def.flux pvm3/conf/LINUX64.def
--- pvm3/conf/LINUX64.def.flux	2008-12-17 15:41:04.000000000 -0500
+++ pvm3/conf/LINUX64.def	2015-10-02 13:47:15.321006000 -0400
@@ -29,16 +29,16 @@
 #	and then do a "make clean ; make shared" in $PVM_ROOT.
 #
 # SHAREDCFLAGS = -fpic
-SHAREDCFLAGS =
 SHAREDLDFLAGS = -shared
 #
-ARCHCFLAGS	=	-DSYSVSIGNAL -DNOWAIT3 -DRSHCOMMAND=\"/usr/bin/rsh\" \
+CC		=	gcc
+ARCHCFLAGS	=	-DSYSVSIGNAL -DNOWAIT3 -DHASREADLINE -DTTYDIS=12 -DRSHCOMMAND=\"flux-pvm-run\" \
 				-DNEEDENDIAN -DFDSETNOTSTRUCT -DHASERRORVARS \
 				-DHASSTDLIB -DCTIMEISTIMET -DSYSERRISCONST -DNOTMPNAM \
 				-DSYSVSTR -DUSESTRERROR $(SHAREDCFLAGS)
 ARCHDLIB	=
 ARCHDOBJ	=
-ARCHLIB		=
+ARCHLIB		=	-lreadline
 HASRANLIB	=	t
 AR			=	ar
 PVM_ARCH	=	LINUX64
diff -up pvm3/examples/hello.c.flux pvm3/examples/hello.c
--- pvm3/examples/hello.c.flux	2009-01-22 20:12:48.000000000 -0500
+++ pvm3/examples/hello.c	2015-10-02 13:05:33.884503000 -0400
@@ -38,21 +38,36 @@ static char rcsid[] =
 
 main()
 {
-	int cc, tid;
+	int cc, i, bufid, info, len, tag, tid;
 	char buf[100];
+        int child[16];
 
 	printf("i'm t%x\n", pvm_mytid());
 
-	cc = pvm_spawn("hello_other", (char**)0, 0, "", 1, &tid);
+	cc = pvm_spawn("hello_other", (char**)0, 0, "", 16, child);
+        for (i = 0; i < 16; i++)  {
+            if (child[i] < 0) /* print the error code in decimal*/
+                printf(" %d", child[i]);
+            else  /* print the task id in hex */
+                printf("t%x\t", child[i]);
+        }
+        putchar('\n');
+
+	if (cc > 0) {
+                printf( "started %d children\n", cc );
+                for ( i = 0 ; i < cc ; i++ ) {
+		    bufid = pvm_recv(-1, -1);
+                    if (bufid < 0) { pvm_perror( "calling recv" ); }
+		    info = pvm_bufinfo(bufid, &len, &tag, &tid);
+                    if (info < 0) pvm_perror("calling pvm_bufinfo");
+		    info = pvm_upkstr(buf);
+                    if (info < 0) pvm_perror("calling pvm_ipkstr");
+		    printf("from t%x: %s\n", tid, buf);
+                }
 
-	if (cc == 1) {
-		cc = pvm_recv(-1, -1);
-		pvm_bufinfo(cc, (int*)0, (int*)0, &tid);
-		pvm_upkstr(buf);
-		printf("from t%x: %s\n", tid, buf);
-
-	} else
+	} else {
 		printf("can't start hello_other\n");
+        }
 
 	pvm_exit();
 	exit(0);
diff -up pvm3/examples/hello_other.c.flux pvm3/examples/hello_other.c
--- pvm3/examples/hello_other.c.flux	2009-01-22 20:12:48.000000000 -0500
+++ pvm3/examples/hello_other.c	2015-10-02 13:05:33.891510000 -0400
@@ -39,6 +39,7 @@ static char rcsid[] =
 #else
 #include <strings.h>
 #endif
+#include <unistd.h>
 #include "pvm3.h"
 
 main()
@@ -48,6 +49,7 @@ main()
 
 	ptid = pvm_parent();
 
+        sleep(getpid() % 10);
 	strcpy(buf, "hello, world from ");
 	gethostname(buf + strlen(buf), 64);
 
diff -up pvm3/lib/flux-pvm-run.flux pvm3/lib/flux-pvm-run
--- pvm3/lib/flux-pvm-run.flux	2015-10-02 13:05:33.895492000 -0400
+++ pvm3/lib/flux-pvm-run	2015-10-02 13:05:33.896507000 -0400
@@ -0,0 +1,23 @@
+#!/bin/sh
+# This script is necessary because pvmd3 exec()'s things like this:
+#   av[0]="mpirun"
+#   av[1]="-pernode"
+#   av[2]="-H"
+#   av[3]="nyx5617"
+#   av[4]="$PVM_ROOT/lib/pvmd -s -d0xffff -nnyx5617 1 0aa40764:cf33 4080 20aa40617:0000" 
+# ...but, unlike sshd, mpirun doesn't run its command through a shell for
+# variable # substitution and parsing into individual options, leading to the
+# following error:
+#   $PVM_ROOT/lib/pvmd -s -d0xffff -nnyx5617 1 0aa40764:cf33 4080 20aa40617:0000: command not found
+# To solve this, we have this shell script break up the command and perform
+# shell variable substitution.
+
+# mpirun won't work with the Ethernet-over-Infiniband interfaces, so use
+# the regular network interface instead:
+host=`echo $1 | sed 's/-hs$//'`
+shift
+# expand remaining arguments:
+args=`eval echo "$@"`
+# run the command on the correct node:
+exec mpirun -pernode -H $host $args
+
diff -up pvm3/Makefile.aimk.flux pvm3/Makefile.aimk
--- pvm3/Makefile.aimk.flux	2015-10-02 13:49:43.847671000 -0400
+++ pvm3/Makefile.aimk	2015-10-02 13:50:21.323315000 -0400
@@ -136,4 +136,7 @@ shared:
 	@ echo "building shared in src"
 	cd src; ../lib/aimk $(PVMOPTS) install-shared
 	@ echo "done building shared in src"
+	@ echo "building shared in pvmgs"
+	cd pvmgs; ../lib/aimk $(PVMOPTS) install-shared
+	@ echo "done building shared in pvmgs"
 
diff -up pvm3/pvmgs/Makefile.aimk.flux pvm3/pvmgs/Makefile.aimk
--- pvm3/pvmgs/Makefile.aimk.flux	2015-10-02 13:35:40.447611000 -0400
+++ pvm3/pvmgs/Makefile.aimk	2015-10-02 13:53:05.132275000 -0400
@@ -45,13 +45,15 @@ PROGS		=	$(PVMXDIR)/pvm_gstat$(EXESFX) \
 
 LPROGS		=	$(PVMLDIR)/pvmgs$(EXESFX)
 
-LIBGPVM		=	$(LIBPREFIX)gpvm3.a
+LIBGPVM		=	$(LIBPREFIX)gpvm3
 
 install:	all
 
 install-mpp:	all-mpp
 
-all:	$(DIRS) $(PROGS) $(PVMLDIR)/$(LIBGPVM) $(LPROGS)
+install-shared:	all $(PVMLDIR)/$(LIBGPVM).so
+
+all:	$(DIRS) $(PROGS) $(PVMLDIR)/$(LIBGPVM).a $(LPROGS)
 
 all-mpp:	$(DIRS) $(PROGS) $(PVMLDIR)/$(LIBGPVM)-mpp $(LPROGS)
 
@@ -71,40 +73,48 @@ $(PVMXDIR)/pvmgs$(EXESFX):  pvmgs$(EXESF
 $(PVMXDIR)/pvmgroups$(EXESFX):  pvmgroups$(EXESFX)
 	cp pvmgroups$(EXESFX) $(PVMXDIR)
 
-$(PVMLDIR)/$(LIBGPVM):  $(LIBGPVM)
-	cp $(LIBGPVM) $(PVMLDIR)
-	case x$(HASRANLIB) in xt ) echo ranlib; ranlib $(PVMLDIR)/$(LIBGPVM) ;; esac
+$(PVMLDIR)/$(LIBGPVM).a:  $(LIBGPVM).a
+	cp $(LIBGPVM).a $(PVMLDIR)
+	case x$(HASRANLIB) in xt ) echo ranlib; ranlib $(PVMLDIR)/$(LIBGPVM).a ;; esac
 
 $(PVMLDIR)/$(LIBGPVM)-mpp:  $(LIBGPVM)-mpp
-	cp $(LIBGPVM) $(PVMLDIR)
-	case x$(HASRANLIB) in xt ) echo ranlib; ranlib $(PVMLDIR)/$(LIBGPVM) ;; esac
+	cp $(LIBGPVM).a $(PVMLDIR)
+	case x$(HASRANLIB) in xt ) echo ranlib; ranlib $(PVMLDIR)/$(LIBGPVM).a ;; esac
 	touch $(PVMLDIR)/$(LIBGPVM)-mpp
 
 $(PVMLDIR)/pvmgs$(EXESFX):  pvmgs$(EXESFX)
 	cp pvmgs$(EXESFX) $(PVMLDIR)
 
-pvmgroups$(EXESFX):	pvmgroups.o $(LIBGPVM) $(PVMLIBDEP)
-	$(CC) $(CFLAGS) -o $@ pvmgroups.o $(LIBGPVM) $(LIBS) 
+pvmgroups$(EXESFX):	pvmgroups.o $(LIBGPVM).a $(PVMLIBDEP)
+	$(CC) $(CFLAGS) -o $@ pvmgroups.o $(LIBGPVM).a $(LIBS) 
 
 pvmgs$(EXESFX):	$(DOBJ) $(PVMLIBDEP)
 	$(CC) $(CFLAGS) -o $@ $(DOBJ) $(LIBS)
 
-$(LIBGPVM):	$(LOBJ)
-	rm -f $(LIBGPVM)
-	$(AR) cr $(LIBGPVM) $(LOBJ)
-	case x$(HASRANLIB) in xt ) echo ranlib; ranlib $(LIBGPVM) ;; esac
+$(LIBGPVM).a:	$(LOBJ)
+	rm -f $(LIBGPVM).a
+	$(AR) cr $(LIBGPVM).a $(LOBJ)
+	case x$(HASRANLIB) in xt ) echo ranlib; ranlib $(LIBGPVM).a ;; esac
+
+# shared library:
+$(PVMLDIR)/$(LIBGPVM).so: $(LIBGPVM).so
+	cp $(LIBGPVM).so $(PVMLDIR)
+
+$(LIBGPVM).so:   $(REGEXCONF) $(LOBJ)
+	rm -f $(LIBGPVM).so
+	$(CC) $(SHAREDLDFLAGS) -o $(LIBGPVM).so $(LOBJ)
 
 $(LIBGPVM)-mpp:	$(LOBJ)
-	rm -f $(LIBGPVM)
-	$(AR_FRONT) cr $(LIBGPVM) $(LOBJ)
-	case x$(HASRANLIB) in xt ) echo ranlib; ranlib $(LIBGPVM) ;; esac
+	rm -f $(LIBGPVM).a
+	$(AR_FRONT) cr $(LIBGPVM).a $(LOBJ)
+	case x$(HASRANLIB) in xt ) echo ranlib; ranlib $(LIBGPVM).a ;; esac
 	touch $(LIBGPVM)-mpp
 
-pvm_gstat$(EXESFX): pvm_gstat.o $(LIBGPVM) $(PVMLIBDEP)
-	$(CC) $(CFLAGS) -o $@ pvm_gstat.o $(LIBGPVM) $(LIBS)
+pvm_gstat$(EXESFX): pvm_gstat.o $(LIBGPVM).a $(PVMLIBDEP)
+	$(CC) $(CFLAGS) -o $@ pvm_gstat.o $(LIBGPVM).a $(LIBS)
 
 clean:
-	rm -f $(DOBJ) $(LOBJ) pvmgs$(EXESFX) $(LIBGPVM) \
+	rm -f $(DOBJ) $(LOBJ) pvmgs$(EXESFX) $(LIBGPVM).a $(LIBGPVM).so.3 \
 		pvm_gstat.o pvmgroups.o pvm_gstat$(EXESFX) pvmgroups$(EXESFX)
 
 tidy:
